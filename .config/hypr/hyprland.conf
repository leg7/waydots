exec-once = setbg -i

# Daemons
exec-once = foot --server
exec-once = emacs --daemon
exec-once = ydotoold
exec-once = fnott
exec-once = wlsunset -S 6:00 -s 20:00 -t 3000 -d 900

# Hyprland unix-socket scripts
exec-once = ~/.local/bin/hypr/monitor-plug
exec-once = ~/.local/bin/hypr/monitor-unplug
exec-once = ~/.local/bin/hypr/monitor-switch

# Status bar
exec-once = eww daemon
exec-once = eww open bar
exec-once = eww open bar-extern
exec-once = antenna -u wlan
exec-once = antenna -u bluetooth

exec = eww reload

# --------------------------------------------------------------------------- #
# ----------------------------- Settings ------------------------------------ #
# --------------------------------------------------------------------------- #

# dracula theme
$background = 	 282a36
$selection  = 	 44475a
$foreground = 	 f8f8f2
$comment    = 	 6272a4
$cyan       = 	 8be9fd
$green      = 	 50fa7b
$orange     = 	 ffb86c
$pink       = 	 ff79c6
$purple     = 	 bd93f9
$red        = 	 ff5555
$yellow     = 	 f1fa8c

$swallow = foot
# We need these variables for the gaps-toggle bind
$gaps_in = 4
$gaps_out = 8
$rounding = 6

general {
	border_size             = 1
	col.inactive_border     = rgb($selection)
	col.active_border       = rgb($red)

	gaps_in                 = $gaps_in
	gaps_out                = $gaps_out

	cursor_inactive_timeout = 3

	layout                  = dwindle
}

decoration {
	rounding               = $rounding
	multisample_edges      = true

	# update this in the eww.scss and fnott.ini too
	active_opacity         = 0.85
	inactive_opacity       = 0.85
	fullscreen_opacity     = 0.85

	blur                   = true
	blur_size              = 1
	blur_passes            = 3
	blur_ignore_opacity    = true
	blur_new_optimizations = on
	blur_xray              = true

	drop_shadow            = yes
	shadow_range           = 20
	shadow_render_power    = 3
	shadow_ignore_window   = true
	col.shadow             = rgba(000000BB)
	col.shadow_inactive    = rgba(00000077)
	shadow_offset          = [0, 0]
	shadow_scale           = 1.0

	dim_inactive           = true
	dim_strength           = 0.15
	dim_special            = 0.8
	dim_around             = 0.8

	#screen_shader         = filepth
}

# Snappy fast clean animations
animations {
	enabled   = true
	animation = windows , 1, 4, default, popin
	animation = fade , 1, 4, default
	animation = border , 1, 4, default
	animation = workspaces, 1, 2, default, slide
}

input {
	repeat_rate   = 30
	repeat_delay  = 250

	accel_profile = flat
	scroll_method = on_button_down
	follow_mouse  = 2
	float_switch_override_focus = 0

	touchpad {
		natural_scroll       = true
		clickfinger_behavior = true
	}
}

device:tpps/2-ibm-trackpoint {
	sensitivity    = 1.1
	natural_scroll = true
}

device:synaptics-tm3276-022 {
	sensitivity    = 0.85
	natural_scroll = true
}

misc {
	disable_hyprland_logo     = true
	disable_splash_rendering  = true
	enable_swallow            = true
	swallow_regex             = $swallow
}

dwindle {
	force_split    = 2
	preserve_split = true
}

master {
	new_is_master = false
}

# --------------------------------------------------------------------------- #
# -------------------------------- Bindings --------------------------------- #
# --------------------------------------------------------------------------- #
#
# mneumonics in comments if the exec arg is not enough

$mod = SUPER	     # Use this one to control hyprland
$appmod = SUPERSHIFT # Use this modifier to control applications
$term = footclient
$term_class = foot

#---------------#
#--- Control ---#
#---------------#

# Applications
bind = $appmod , Caps_Lock , exec      , killall Hyprland
bind = $appmod , c         , killactive, # close
bind = $appmod , x         , exec      , hyprctl kill # X means kill, destory...
bind = $appmod , t         , exec      , $term
bind = $appmod , g         , exec      , gaps-toggle $gaps_in $gaps_out $rounding
bind = $appmod , grave     , exec      , pkill -x wlogout || wlogout -c 25 -r 25
bind = $appmod , Escape    , exec      , swaylock
bind = $appmod , a         , exec      , $term -e pulsemixer # audio
bind = $appmod , b         , exec      , firefox # browser
bind = $appmod , f         , exec      , nemo # file manager
bind = $appmod , d         , exec      , $term -e sail # downloads
bind = $appmod , r         , exec      , $term -e newsboat # rss
bind = $appmod , Backspace , exec      , qalculate-gtk
bind = $appmod , m         , exec      , $term -e ncmpcpp # music
bind = $appmod , e         , exec      , pkill -x wofi || wofi --show drun -I # execute
bind = $appmod , y         , exec      , yt # yo,Print      , exec      , flameshot
bind = $appmod                   ,Return     , exec      , fnottctl dismiss
bind = $appmod ,s          , exec      , gnome-calendar # schedule
bind = $appmod , q         , exec      , qrcode #

# State
bindel =, XF86MonBrightnessUp  , exec, brightness -c 2%+ # for eww
bindel =, XF86MonBrightnessDown, exec, brightness -c 2%- # for eww
bindel =, XF86AudioRaiseVolume , exec, volume -c +1db
bindel =, XF86AudioLowerVolume , exec, volume -c -1db
bindel =, XF86AudioMute        , exec, volume -m
bind =  , XF86AudioMicMute     , exec, toggle-mics
bind =  , XF86Bluetooth        , exec, antenna -u bluetooth# for eww # My keys are hardcoded to toggle antennas so I don't need the -t option
bind =  , XF86WLAN             , exec, antenna -u wlan # for eww

# Layouts/modes

#-------------#
#--- focus ---#
#-------------#

bind = $mod, h, movefocus, l
bind = $mod, l, movefocus, r
bind = $mod, k, movefocus, u
bind = $mod, j, movefocus, d

bind = $mod, n  , workspace, +1 # next
bind = $mod, p  , workspace, -1 # precedant
bind = $mod, Tab, workspace, previous
bind = ALT, Tab, cyclenext,
bind = ALTSHIFT, Tab, cyclenext, prev

bind = $mod, ampersand   , workspace, 1
bind = $mod, bracketleft , workspace, 2
bind = $mod, braceleft   , workspace, 3
bind = $mod, braceright  , workspace, 4
bind = $mod, parenleft   , workspace, 5
bind = $mod, equal       , workspace, 6
bind = $mod, asterisk    , workspace, 7
bind = $mod, parenright  , workspace, 8
bind = $mod, plus        , workspace, 9
bind = $mod, bracketright, workspace, 10

bind = $mod , a    , pin           , active # anchor
bind = $mod , f    , fullscreen    , 0 # fullscreen
bind = $mod , e    , fullscreen    , 1 # expand
bind = $mod , space, togglefloating,

#----------------#
#--- movement ---#
#----------------#

binde = $appmod, l ,resizeactive,  30 0
binde = $appmod, h ,resizeactive, -30 0
binde = $appmod, k ,resizeactive,   0 -30
binde = $appmod, j ,resizeactive,   0 30

bind = $appmod, n  , movetoworkspace, +1
bind = $appmod, p  , movetoworkspace, -1
bind = $appmod, Tab, movetoworkspace, previous

bind = $appmod, ampersand   , movetoworkspace, 1
bind = $appmod, bracketleft , movetoworkspace, 2
bind = $appmod, braceleft   , movetoworkspace, 3
bind = $appmod, braceright  , movetoworkspace, 4
bind = $appmod, parenleft   , movetoworkspace, 5
bind = $appmod, equal       , movetoworkspace, 6
bind = $appmod, asterisk    , movetoworkspace, 7
bind = $appmod, parenright  , movetoworkspace, 8
bind = $appmod, plus        , movetoworkspace, 9
bind = $appmod, bracketright, movetoworkspace, 10

bindm = $appmod, mouse:272, movewindow
bindm = $appmod, mouse:273, resizewindow

# # Master Layout
# bind = $appmod , s , layoutmsg , swapwithmaster # swap master
# bind = $appmod , i , layoutmsg , addmaster # increase master stack
# bind = $appmod , d , layoutmsg , removemaster # decrease master stack

# Dwindle layout
bind = $mod, s, togglesplit, # split (inconsistent should be $appmod)
bind = $appmod, space, pseudo, # (p was taken...)

#---------------------#
#--- multi-monitor ---#
#---------------------#

bind   = $mod, m, submap, monitor
submap = monitor

bind = $mod, n, focusmonitor, +1
bind = $mod, n, submap , reset
bind = $appmod, n, movewindow, mon:+1
bind = $appmod, n, submap, reset
bind = $appmod, t, movecurrentworkspacetomonitor, +1 # transfer
bind = $appmod, t, submap, reset

bind   = ,Escape,submap,reset
submap = reset

# ------------------------------------------------------------------------- #
# ----------------------------- Rules ------------------------------------- #
# ------------------------------------------------------------------------- #

# Adjust the monitor scripts if needed
$main_monitor = BOE 0x074F
$external_monitor = Samsung Electric Company S34J55x HTRK901623

#---------------#
#--- Windows ---#
#---------------#

windowrulev2 = noblur,class:\b(?!$term_class\b)\w+
windowrulev2 = opaque,class:\b(?!$term_class\b)\w+

windowrule = float, title:^(Firefox â€” Sharing Indicator)

windowrule = float, qalculate-gtk
windowrule = maxsize 800 580, qalculate-gtk
windowrule = center, qalculate-gtk

windowrulev2 = float, title:^(.*)Properties$ # Nemo windows

windowrulev2 = float, title:^(nmtui)$
windowrulev2 = maxsize 1200 900, title:^(nmtui)$
windowrulev2 = center, title:^(nmtui)$

windowrulev2 = float, title:^(weather)$ # Need to implement this in eww
windowrulev2 = maxsize 1100 700, title:^(weather)$
windowrulev2 = center, title:^(weather)$


#----------------#
#--- Monitors ---#
#----------------#

monitor = desc:$main_monitor    ,highres,0x0,1
monitor = desc:$external_monitor,3440x1440@60,auto,1

# trigger when the switch is toggled
# bindl=,switch:Lid Switch,exec,notify-send "Toggled"
# bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor desc:$main_monitor,disable
# bindl=,switch:on:Lid Switch,exec,swaylock --grace 0 --fade-in 0
# bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor desc:$main_monitor,highres,0x0,1
#  bindl=,switch:on:Lid Switch,exec,notify-send "switch" "on"
#  bindl=,switch:off:Lid Switch,exec,notify-send "switch" "off"

layerrule = blur, gtk-layer-shell
layerrule = blur, notifications
blurls = gtk-layer-shell
blurls = notifications
