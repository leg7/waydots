#############################
##### General settings ######
#############################
ncmpcpp_directory = ~/.config/ncmpcpp
lyrics_directory = ~/.local/share/mpd/lyrics
external_editor = vim
use_console_editor = yes

autocenter_mode = yes
centered_cursor = yes

cyclic_scrolling = no
mouse_support = no
#mouse_list_scroll_whole_page = no
#lines_scrolled = 5

volume_change_step = 2

incremental_seeking = yes
seek_time = 1

# If a song is in the playlist adding it again will remove it
space_add_mode = add_remove
jump_to_now_playing_song_at_start = yes
ask_before_clearing_playlists = yes

#####################
##### Interface #####
#####################

enable_window_title = yes

# Available values: classic, alternative.
user_interface = classic

# Columns or classic
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = columns
playlist_editor_display_mode = columns

startup_screen = media_library
startup_slave_screen = ""
startup_slave_screen_focus = no

locked_screen_width_part = 50
ask_for_locked_screen_width_part = yes

# Available values: artist, album_artist, date, genre, composer, performer.
media_library_primary_tag = album_artist
media_library_albums_split_by_date = no
media_library_hide_album_dates = no

execute_on_song_change = notify-send --urgency=low "🎵  Now Playing  🎶" "$(ncmpcpp -q --current-song='{%a - %t}|{%f}')"
execute_on_player_state_change = eww update current-song="$(ncmpcpp -q --current-song='{%22a - %22t}|{%44f}')"

#playlist_show_mpd_host = no
#playlist_show_remaining_time = no
#playlist_shorten_total_times = no
#playlist_separate_albums = no

#default_tag_editor_pattern = %n - %t
#
# lyrics_fetchers = azlyrics, genius, musixmatch, sing365, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, zeneszoveg, internet
lyrics_fetchers = azlyrics, musixmatch, sing365, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, zeneszoveg, internet
lastfm_preferred_language = en
follow_now_playing_lyrics = yes
fetch_lyrics_for_current_song_in_background = yes
store_lyrics_in_song_dir = no

##### Search settings ######
block_search_constraints_change_if_items_found = no
search_engine_default_search_mode = 1
regular_expressions = basic
default_find_mode = wrapped
default_place_to_search_in = database
data_fetching_delay = yes
ignore_leading_the = yes
ignore_diacritics = yes

generate_win32_compatible_filenames = yes
show_hidden_files_in_local_browser = no
allow_for_physical_item_deletion = no

empty_tag_marker = <empty>
tags_separator = " | "
tag_editor_extended_numeration = no
media_library_sort_by_mtime = no

##############################
#####!!! Aesthetics !!!#######
##############################

clock_display_seconds = no

header_visibility = yes
header_text_scrolling = yes
titles_visibility = yes
show_duplicate_tags = yes

statusbar_visibility = yes
display_remaining_time = no
progressbar_look = =>
display_volume_level = yes
display_bitrate = yes
connected_message_on_startup = no
message_delay_time = 4

##
#### Colors ####
##
colors_enabled = yes
discard_colors_if_item_is_selected = yes

# Top part with classic UI
header_window_color = red
state_line_color = red
state_flags_color = magenta
volume_color = yellow
alternative_ui_separator_color = black

# Main pane
main_window_color = default
empty_tag_color = red
color1 = red
color2 = red
active_window_border = blue
window_border_color = red

# Bottom
progressbar_color = black
progressbar_elapsed_color = green
player_state_color = green
statusbar_color = yellow
statusbar_time_color = green

##### connection settings #####
mpd_music_dir = ~/audio
mpd_host = localhost
mpd_port = 6600
mpd_connection_timeout = 5
mpd_crossfade_time = 5

######################
##### Visualizer #####
######################
audio_output {
       type            "fifo"
       name            "Visualizer feed"
       path            "/tmp/mpd.fifo"
       format          "44100:16:2"
}
visualizer_data_source = /tmp/mpd.fifo
visualizer_output_name = Visualizer feed
visualizer_in_stereo = yes

## Available values: spectrum, wave, wave_filled, ellipse.
visualizer_type = spectrum
visualizer_fps = 60
visualizer_autoscale = yes
visualizer_look = ●▮
# visualizer_color = blue, cyan, green, yellow, magenta, red
# Alternative subset of 256 colors for terminals that support it.
visualizer_color = 47, 83, 119, 155, 191, 227, 221, 215, 209, 203, 197, 161
visualizer_spectrum_smooth_look = yes

visualizer_spectrum_dft_size = 1
visualizer_spectrum_gain = 0

visualizer_spectrum_hz_min = 1
visualizer_spectrum_hz_max = 22000

###########################
##### system encoding #####
###########################
#system_encoding = ""
#
##### delays #####
#
## Time of inactivity (in seconds) after playlist highlighting will be disabled
## (0 = always on).
##
# playlist_disable_highlight_delay = 1
#
## Defines how long messages are supposed to be visible.
##
#
##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.  They are
## followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it again,
## but this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
## reversed colors.
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
##
## Note: colors can be nested.
##
#
song_list_format = {%a - }{%t}|{$8%f$9}$R{$3%l$9}
song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}
song_library_format = {%n - }{%t}|{%f}
#
alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
alternative_header_second_line_format = {{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}
#
current_item_prefix = $(yellow)$r
current_item_suffix = $/r$(end)
current_item_inactive_column_prefix = $(white)$r
current_item_inactive_column_suffix = $/r$(end)
#
now_playing_prefix = $b
now_playing_suffix = $/b
#
browser_playlist_prefix = "$2playlist$9 "
#
selected_item_prefix = $6
selected_item_suffix = $9
modified_item_prefix = $3> $9
#
##
## Note: attributes are not supported for the following variables.
##
song_window_title_format = {%a - }{%t}|{%f}
##
## Note: Below variables are used for sorting songs in browser.  The sort mode
## determines how songs are sorted, and can be used in combination with a sort
## format to specify a custom sorting format.  Available values for
## browser_sort_mode are "type", "name", "mtime", "format" and "none".
##
#
browser_sort_mode = type
browser_sort_format = {%a - }{%t}|{%f} {%l}
#
##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
##
#
song_columns_list_format = (20)[]{a} (6f)[green]{NE} (50)[white]{t|f:Title} (20)[cyan]{b} (7f)[magenta]{l}
#
